AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  lv-sam-step-test

  Sample SAM Template for lv-sam-app-step-test

Resources:
  ArchiverStateMachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: statemachine/archiver_tiny_logic_test.asl.json
      Tags:
        "noaa:projectid": ncap
        "nesdis:name": ncap-archive
        "ncap:poc": lou.vasquez@noaa.gov
      DefinitionSubstitutions:
        GenerateInfoFunctionArn: !GetAtt GenerateInfoFunction.Arn
        ArchiveGranuleFunctionArn: !GetAtt ArchiveGranuleFunction.Arn
        BadGranuleFunctionArn: !GetAtt BadGranuleFunction.Arn
        DDBPutItem: !Sub arn:${AWS::Partition}:states:::dynamodb:putItem
        DDBTable: !Ref ArchiveTable
      # Events:
      #   HourlyAggregationSchedule:
      #     Type: Schedule
      #     Properties:
      #       Description: Schedule to run aggregation
      #       Enabled: False
      #       Schedule: "rate(1 hour)"
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateInfoFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ArchiveGranuleFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref BadGranuleFunction
        - DynamoDBWritePolicy:
            TableName: !Ref ArchiveTable

  GenerateInfoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/generate-info/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tags:
        "noaa:projectid": ncap
        "nesdis:name": ncap-archive
        "ncap:poc": lou.vasquez@noaa.gov

  ArchiveGranuleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/archive-granule/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tags:
        "noaa:projectid": ncap
        "nesdis:name": ncap-archive
        "ncap:poc": lou.vasquez@noaa.gov

  BadGranuleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/bad-granule/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tags:
        "noaa:projectid": ncap
        "nesdis:name": ncap-archive
        "ncap:poc": lou.vasquez@noaa.gov

  ArchiveTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: Id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      Tags:
        "noaa:projectid": ncap
        "nesdis:name": ncap-archive
        "ncap:poc": lou.vasquez@noaa.gov

Outputs:
  ArchiverStateMachineArn:
    Description: "Archiver state machine ARN"
    Value: !Ref ArchiverStateMachine
  ArchiverStateMachineRole:
    Description: "IAM Role for Archiver"
    Value: !GetAtt ArchiverStateMachineRole.Arn
